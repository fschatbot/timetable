/* These are comopoents from daisyUI  */
/* Directly implementing daisy created problems I wasn't ready to deal with */

:root {
	color-scheme: dark;
	--fallback-b1: #1d232a;
	--fallback-b2: #191e24;
	--fallback-bc: #a6adbb;
	--fallback-in: #00b3f0;
	--fallback-inc: #000000;
}

.checkbox {
	flex-shrink: 0;
	--chkbg: var(--fallback-bc);
	--chkfg: var(--fallback-b1);
	height: 1.5rem;
	width: 1.5rem;
	cursor: pointer;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	border-radius: var(--rounded-btn, 0.5rem);
	border-width: 1px;
	border-color: var(--fallback-bc);
	--tw-border-opacity: 0.2;
}

.checkbox:focus-visible {
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
	outline-color: var(--fallback-bc);
}

.checkbox:checked,
.checkbox[checked="true"],
.checkbox[aria-checked="true"] {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-bc);
	background-repeat: no-repeat;
	animation: checkmark var(--animation-input, 0.2s) ease-out;
	background-image: linear-gradient(-45deg, transparent 65%, var(--chkbg) 65.99%), linear-gradient(45deg, transparent 75%, var(--chkbg) 75.99%),
		linear-gradient(-45deg, var(--chkbg) 40%, transparent 40.99%), linear-gradient(45deg, var(--chkbg) 30%, var(--chkfg) 30.99%, var(--chkfg) 40%, transparent 40.99%),
		linear-gradient(-45deg, var(--chkfg) 50%, var(--chkbg) 50.99%);
}

.checkbox:indeterminate {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
	background-repeat: no-repeat;
	animation: checkmark var(--animation-input, 0.2s) ease-out;
	background-image: linear-gradient(90deg, transparent 80%, var(--chkbg) 80%), linear-gradient(-90deg, transparent 80%, var(--chkbg) 80%),
		linear-gradient(0deg, var(--chkbg) 43%, var(--chkfg) 43%, var(--chkfg) 57%, var(--chkbg) 57%);
}

[type="checkbox"].checkbox-xs {
	height: 1rem;
	width: 1rem;
}

[type="checkbox"].checkbox-sm {
	height: 1.25rem;
	width: 1.25rem;
}

[type="checkbox"].checkbox-md {
	height: 1.5rem;
	width: 1.5rem;
}

[type="checkbox"].checkbox-lg {
	height: 2rem;
	width: 2rem;
}

.alert {
	display: grid;
	margin-top: 1rem;
	grid-auto-flow: row;
	align-content: flex-start;
	align-items: center;
	justify-items: center;
	gap: 1rem;
	text-align: center;
	border-radius: 1rem;
	border-width: 1px;
	--tw-border-opacity: 1;
	border-color: var(--fallback-b2);
	padding: 1rem;
	--tw-text-opacity: 1;
	color: var(--fallback-bc);
	--alert-bg: var(--fallback-b2);
	--alert-bg-mix: var(--fallback-b1);
	background-color: var(--alert-bg);
}

@media (min-width: 640px) {
	.alert {
		grid-auto-flow: column;
		grid-template-columns: auto minmax(auto, 1fr);
		justify-items: start;
		text-align: start;
	}
}
.alert-info {
	border-color: var(--fallback-in);
	--tw-text-opacity: 1;
	color: var(--fallback-inc);
	--alert-bg: var(--fallback-in);
	--alert-bg-mix: var(--fallback-b1);
}

.stroke-info {
	stroke: var(--fallback-in);
}
